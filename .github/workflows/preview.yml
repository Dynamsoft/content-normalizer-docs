# This is a basic workflow to help you get started with Actions

name: CI-Preview

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ preview ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          #cd /home/ubuntu
          #[ ! -d content-normalizer-docs-preview ] && git clone --depth 1 --branch preview https://github.com/Dynamsoft/content-normalizer-docs.git content-normalizer-docs-preview
          #[ ! -d DCNDocPreview ] && mkdir -p DCNDocPreview
          #cd content-normalizer-docs-preview && git pull && cd .. && cp -rfp ./content-normalizer-docs-preview/* ./DCNDocPreview/
          #cd Docs-Template-Repo && git pull && cd .. && cp -rfp ./Docs-Template-Repo/* ./DCNDocPreview/
          #cd DCNDocPreview && bundle exec jekyll build --incremental
          python3 /home/ubuntu/ftp.py /home/ubuntu/DCNDocPreview/_site/ ./www.dynamsoft.com/content-normalizer/ test
          
#      # Runs a set of commands using the runners shell
#      - name: Upload to website
#        run: |
#          function uploaddirectory(){
#              for element in `ls $1`
#              do  
#                  dir_or_file=$1"/"$element
#                  if [ -d $dir_or_file ]
#                  then
#          ftp -p -n $2 $3<<!
#          user $4 $5
#          binary
#          mkdir $dir_or_file
#          close
#          bye
#          !
#                      uploaddirectory $dir_or_file $2 $3 $4 $5
#                  else
#          ftp -p -n $2 $3<<!
#          user $4 $5
#          binary
#          put $dir_or_file
#          close
#          bye
#          !
#                  fi  
#              done
#          }
#          cd /home/ubuntu
#          mkdir -p tempftp/www.dynamsoft.com/content-normalizer/tmp
#          cp -rfp /home/ubuntu/DCNDocPreview/_site/introduction/* /home/ubuntu/tempftp/www.dynamsoft.com/content-normalizer/tmp/
#          cd tempftp
#          uploaddirectory ./ officecn.dynamsoft.com 7500 WebsiteContentManage $user2_pwd
      
      
#      - name: ftp-action
#        # You may pin to the exact commit or the version.
#        # uses: sebastianpopp/ftp-action@eb75c5cb29d23ee4a729720a27dfb66403cb0f6d
#        uses: sebastianpopp/ftp-action@v2.0.0
#        with:
#          # FTP host
#          host: ${{ secrets.FTP_TEST_SITE_SERVER }}
#          # FTP user
#          user: WebsiteContentManage
#          # FTP password
#          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
#          # Force SSL encryption
#          #forceSsl: # optional, default is false
#          # Local directory
#          localDir: /home/ubuntu/DCNDocPreview/_site/introduction/
#          # Remote directory
#          remoteDir: /www.dynamsoft.com/content-normalizer/tmp/
                
      - name: FTP Deploy
        # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@d2724c6194d42ae5d4d042070d51d23cbc6ad83f
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          # ftp server
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          # ftp username
          username: WebsiteContentManage
          # ftp password
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          # Server port to connect to (read your web hosts docs)
          port: 7500
          # protocol to deploy with - ftp, ftps, or ftps-legacy
          #protocol: # optional
          # Folder to upload from, must end with trailing slash /
          local-dir: /home/ubuntu/DCNDocPreview/_site/introduction/
          # Path to upload to on the server. Must end with trailing slash /
          server-dir: /www.dynamsoft.com/content-normalizer/tmp/
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude: # optional
          # How verbose should the information be - minimal, standard, or verbose
          #log-level: # optional
          # strict or loose
          #security: # optional
